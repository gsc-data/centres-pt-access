{"version":3,"sources":["logo.svg","Utils.js","Map.js","Select.js","Legend.js","barChart.js","rightBar.js","App.js","reducers/reducer.js","index.js"],"names":["COLOR_ACCESS","INITIAL_VIEW_STATE","latitude","longitude","zoom","setDefaultCredentials","username","apiKey","AccessMap","centreTypeId","useSelector","state","useState","data","setData","query","useEffect","a","axios","get","encodeURIComponent","response","rows","map","elm","district","x","y","text","position","getData","console","log","texLayer","TextLayer","id","pickable","sizeMinPixels","sizeMaxPixels","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getBackgroundColor","layerAccess","CartoLayer","type","MAP_TYPES","QUERY","getFillColor","object","properties","sym_code","getLineColor","lineWidthMinPixels","whereClasue","styleDict","2","fc","ec","3","4","layerCentres","centretypeid","radiusScale","pointRadiusMinPixels","getRadius","layerDistrict","width","height","initialViewState","getTooltip","centre_type","frequency","centrename","percentage","centretype","html","style","fontSize","controller","layers","reuseMaps","mapStyle","BASEMAP","PRISTON","mapboxApiAccessToken","preventStyleDiffing","BasicSelect","dispatch","useDispatch","Box","sx","minWidth","FormControl","fullWidth","InputLabel","Select","labelId","value","label","onChange","e","val","target","MenuItem","Legend","fontFamily","className","Object","keys","key","backgroundColor","join","BAR_COLORS_BACKGROUND","BAR_COLORS_FILL","Chart","register","ChartDataLabels","options","indexAxis","maintainAspectRatio","elements","bar","borderWidth","responsive","scales","ticks","callback","index","values","yAxes","font","weight","tick","plugins","datalabels","formatter","context","Math","round","anchor","align","size","color","dataset","slice","length","split","parseInt","r","g","b","legend","display","BarChart","d","toString","datasets","row","k","borderColor","RightBar","textAlign","lineHeight","href","App","initialState","store","createStore","currentState","action","ReactDOM","render","document","getElementById"],"mappings":"6lDAAe,I,8HCEFA,EAAe,CACxB,mBAAmB,CAAC,IAAI,EAAE,KAC1B,mBAAmB,CAAC,IAAI,IAAI,KAC5B,mBAAmB,CAAC,IAAI,IAAI,KAC5B,gBAAgB,CAAC,IAAI,IAAI,M,gBCQvBC,EAAqB,CACvBC,UAAW,UACXC,UAAW,WACXC,KAAK,IAYTC,YARsB,CAClBC,SAAU,YACVC,OAAQ,mBAWZ,IAyKiBC,EAjKC,WAEhB,IAAOC,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,gBAF5B,EAIGG,mBAAS,IAJZ,mBAIdC,EAJc,KAIRC,EAJQ,KAMjBC,EAAO,qGACbC,qBAAW,YACI,uCAAG,4BAAAC,EAAA,sEAEUC,IAAMC,IAAN,mDAAsDC,mBAAmBL,KAFnF,cAERM,EAFQ,OAGdP,EAAQO,EAASR,KAAKS,KAAKC,KAAI,SAAAC,GACdA,EAAIC,SAAmBD,EAAIE,EAAEF,EAAIG,EAEhD,MAAO,CAACC,KAAKJ,EAAIC,SAASI,SAAS,CAACL,EAAIE,EAAEF,EAAIG,QANlC,kBASPN,GATO,2CAAH,qDAYbS,KAEA,CAACf,IAEHgB,QAAQC,IAAI,aAIZ,IAAMC,EAAW,IAAIC,IAAU,CAC7BC,GAAI,aACJtB,OACAuB,UAAU,EACVC,cAAc,EACdC,cAAc,GAEdC,QAAS,GACTC,SAAU,EACVC,cAAe,SACfC,qBAAsB,SACtBC,mBAAmB,CAAC,IAAI,IAAI,OAMpBC,EAAc,IAAIC,IAAW,CACjCV,GAAG,aACHW,KAAMC,IAAUC,MAChBnC,KAAK,mKAAD,OAAqKJ,EAArK,4BAEJwC,aAAc,SAAAC,GAEZ,MAAM,GAAN,mBAAWlD,EAAakD,EAAOC,WAAWC,WAA1C,CAAoD,OAEtDC,aAAc,SAAAH,GAAM,OAAGlD,EAAakD,EAAOC,WAAWC,WACtDE,mBAAoB,EACpBlB,UAAU,IAINmB,EAA6B,IAAf9C,EAAiB,mBAAoB,kBAAkBA,EAErE+C,EAAY,CAChBC,EAAG,CACDC,GAAG,CAAC,IAAI,IAAI,IAAI,KAChBC,GAAG,CAAC,IAAI,IAAI,KAGdC,EAAG,CACDF,GAAG,CAAC,IAAI,IAAI,IAAI,KAChBC,GAAG,CAAC,GAAG,IAAI,IAGbE,EAAG,CACDH,GAAG,CAAC,IAAI,IAAI,IAAI,KAChBC,GAAG,CAAC,EAAE,EAAE,KAKNG,EAAe,IAAIjB,IAAW,CAClCV,GAAG,UACHW,KAAMC,IAAUC,MAChBnC,KAAK,uIAAD,OAAyI0C,GAE7IN,aAAc,SAAAC,GAAM,OAAIM,EAAUN,EAAOC,WAAWY,cAAcL,IAElEL,aAAc,SAAAH,GAAM,OAAGM,EAAUN,EAAOC,WAAWY,cAAcJ,IACjEK,YAAY,EACZC,qBAAsB,EACtBC,UAAW,SAAAhB,GAAM,OAAE,EAAEA,EAAOC,WAAWY,aAAc,KACrD3B,UAAU,EACVkB,mBAAmB,MAKfa,EAAgB,IAAItB,IAAW,CACnCV,GAAG,WACHW,KAAMC,IAAUC,MAChBnC,KAAK,2EAELoC,aAAc,CAAC,EAAE,EAAE,EAAE,GACrBI,aAAc,CAAC,GAAI,GAAI,IACvBC,mBAAoB,IAEpBlB,UAAU,IAgCZ,OACE,8BAEE,cAAC,IAAD,CACEgC,MAAM,OACNC,OAAO,OACPC,iBAAkBrE,EAClBsE,WAjCa,SAAC,GAAc,IAAbrB,EAAY,EAAZA,OACnB,IAAKA,EAAQ,OAAO,EADW,MAE2CA,EAAOC,WAA1EqB,EAFwB,EAExBA,YAAsBpB,GAFE,EAEZqB,UAFY,EAEFrB,UAAoBsB,GAFlB,EAEOC,WAFP,EAEkBD,YAAWE,EAF7B,EAE6BA,WAExDC,EAAO,UAQX,OAPAA,GAAQL,EAAY,mCAAD,OAAoCA,EAApC,cAA4D,GAC/EK,GAAQzB,EAAS,uCAAD,OAAwCA,EAAxC,cAA6D,GAE7EyB,GAAQD,EAAW,gCAAD,OAAiCA,EAAjC,cAAwD,GAC1EC,GAAQH,EAAW,yBAAD,OAA0BA,EAA1B,cAAiD,GAG5D,CACLG,KAHFA,GAAO,WAMLC,MAAM,CAEJC,SAAU,WAgBVC,YAAY,EACZC,OAAQ,CAACrC,EAAYuB,EAAcL,EAAa7B,GANlD,SAQE,cAAC,IAAD,CACEiD,WAAS,EACTC,SAAWC,IAAQC,QACnBC,qBAhKgB,4FAiKhBC,qBAAmB,S,sDC1LhB,SAASC,IAGtB,IAAO/E,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,gBAC3CgF,EAAWC,cAcjB,OACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,KAArB,SACE,eAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,EAAA,EAAD,CAAY7D,GAAG,2BAAf,yBACA,eAAC8D,EAAA,EAAD,CACEC,QAAQ,2BACR/D,GAAG,qBACHgE,MAAO1F,EACP2F,MAAM,aACNC,SAtBa,SAACC,EAAGC,GAGrB,OAFFxE,QAAQC,IAAIsE,EAAEE,OAAOL,OAEZV,EACH,CACI3C,KAAM,iBACNrC,aAAc6F,EAAEE,OAAOL,SAW7B,UAOE,cAACM,EAAA,EAAD,CAAUN,MAAO,EAAjB,gCACA,cAACM,EAAA,EAAD,CAAUN,MAAO,EAAjB,mBACA,cAACM,EAAA,EAAD,CAAUN,MAAO,EAAjB,uBACA,cAACM,EAAA,EAAD,CAAUN,MAAO,EAAjB,oE,WCPKO,EA1BA,WAIX,OACI,mCACH,sBAAKvE,GAAG,SAAS2C,MAAQ,CAAC6B,WAAW,sBAArC,UAGC,8HAEA,qBAAKC,UAAU,iBAAf,SAGMC,OAAOC,KAAK9G,GAAcuB,KAAI,SAACwF,GAC7B,OAAO,mCAAK,qBAAKH,UAAU,SAAS9B,MAAO,CAACkC,gBAAgB,QAAD,OAAUhH,EAAa+G,GAAKE,OAA5B,QAAgDF,gB,kCCXnHG,EAAuB,GAG7B,IAAK,IAAIH,KAAO/G,EACdkH,EAAsBH,GAAtB,eAAqC/G,EAAa+G,GAAKE,OAAvD,OAIF,IAAME,EAAiB,GAEvB,IAAK,IAAIJ,KAAO/G,EACdmH,EAAgBJ,GAAhB,eAA+B/G,EAAa+G,GAAKE,OAAjD,SAQFG,IAAMC,SAASC,KACf,IAAMC,EAAU,CAEdC,UAAW,IACXC,qBAAqB,EAIrBC,SAAU,CACRC,IAAK,CACHC,YAAa,IAGjBC,YAAY,EAEZC,OAAQ,CACNpG,EAAG,CACCqG,MAAO,CAEHC,SAAU,SAAS7B,EAAO8B,EAAOC,GAC7B,OAAS/B,EAAO,OAI5BgC,MAAO,CACLJ,MAAO,CAKHK,KAAM,CAGJC,OAAS,SAASlC,GAGhB,MAAoB,mBAFLA,EAARmC,KAEKlC,MAAyB,OAAO,cASxDmC,QAAS,CACPC,WAAW,CACTC,UAAW,SAAStC,EAAOuC,GACzB,OAAQvC,EAAM,GAAIwC,KAAKC,MAAMzC,EAAM,GAAK,IAAI,IAE9C0C,OAAO,MACPC,MAAO,QACPV,KAAM,CACJW,KAAM,MACNV,OAAO,QAETW,MAAO,SAASN,GACd,IAAM1B,EAAkB0B,EAAQO,QAAQjC,gBADlB,EAENA,EAAgBkC,MAAM,EAAElC,EAAgBmC,OAAO,GAAGC,MAAM,KAAK7H,KAAI,SAAAC,GAAG,OAAE6H,SAAS7H,MAFzE,mBAEf8H,EAFe,KAEbC,EAFa,KAEXC,EAFW,KAQtB,MAFe,OAAD,OAASb,KAAKC,MAHd,GAGoBU,EAAS,GAA7B,YAAmCX,KAAKC,MAHxC,GAG8CW,EAAS,GAAvD,YAA6DZ,KAAKC,MAHlE,GAGwEY,EAAS,GAAjF,OAMlBC,OAAO,CACLC,SAAQ,KAqCCC,EAxBE,WAEf,IAAOlJ,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,gBAC3CI,EAAQ+I,EAAEnJ,EAAaoJ,YAS3B,OARF9H,QAAQC,IAAInB,GACZA,EAAKiJ,SAAWjJ,EAAKiJ,SAASvI,KAAK,SAAAwI,GACjC,IAAIC,EAAID,EAAG,MAET,OAAO,2BAAIA,GAAX,IAAe3D,MAAM,GAAD,OAAI2D,EAAI3D,OAAQY,gBAAgBG,EAAgB6C,GAAGC,YAAY/C,EAAsB8C,GAAGpC,YAAY,OAKtH,qBAAK9C,MAAS,CAACT,OAAO,SAAtB,SACA,cAAC,IAAD,CAAKxD,KAAQA,EAAM0G,QAAUA,OC9DtB2C,EApDE,WAKb,OACI,sBAAKtD,UAAU,iBAAiB9B,MAAO,CACnC6B,WAAY,qBAAsBwD,UAC9B,QAFR,UAKI,cAAC3E,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,8BACI,sBAAMV,MAAQ,CAACC,SAAS,OAAxB,+DAEJ,8BACA,uBAAMD,MAAO,CAACC,SAAS,OAAQiE,MAAM,OAAOoB,WAAW,SAAvD,4BACmB,mBAAGC,KAAO,8BAAV,iCADnB,0BChBGC,MAVf,WACE,OACE,sBAAK1D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,SCTF2D,EAAe,CACf9J,aAAa,GCcjB,IAAM+J,EAAQC,aDNC,WAAsD,IAArCC,EAAoC,uDAAtBH,EAAcI,EAAQ,uCAEhE,OAAOA,EAAO7H,MACV,IAAK,iBACD,OAAO,2BACA4H,GADP,IAEIjK,aAAckK,EAAOlK,eAI7B,QACI,OAAOiK,MCHnBE,IAASC,OACP,cAAC,IAAD,CAAUL,MAASA,EAAnB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.892b4f4b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\n\nexport const COLOR_ACCESS  ={\n    'Every 10 minutes':[174,1,126],\n    'Every 20 minutes':[247,104,161],\n    'Every 30 minutes':[251,180,185],\n    'At least once':[254,235,226]\n}","import {CartoLayer,CartoSQLLayer, MAP_TYPES, setDefaultCredentials,BASEMAP} from '@deck.gl/carto';\nimport {TextLayer} from '@deck.gl/layers';\nimport React, {useState, useCallback,useEffect} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\n\nimport axios from 'axios';\nimport {COLOR_ACCESS} from './Utils';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { object } from 'prop-types';\n\n//https://api.mapbox.com/styles/v1/abhijeetsharma94/ckwa9m3by9ah514qs4g24bu3m/tiles/256/%7Bz%7D/%7Bx%7D/%7By%7D@2x?access_token=pk.eyJ1IjoiYWJoaWplZXRzaGFybWE5NCIsImEiOiJja2c2ODFnb3QxMW41MnBubjJ1YzY3N3JqIn0.6mt7rGFgJyV69Vrytgbuog\n\nconst INITIAL_VIEW_STATE = {\n    latitude: -33.878197,\n    longitude: 151.148648,\n    zoom:10\n  };\n\n\n  const credentials = {\n    username: \"gsc-admin\",\n    apiKey: \"default_public\"\n  };\n \n  //const rows =  await fetchData();\n  //console.log(rows[0]); // {count: 7343}\n\nsetDefaultCredentials(credentials);\n\n\n\n\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoiYnNuYXlhbiIsImEiOiJja3Ewczd3MW4wN3Z3MnVvNDNsenlzNnFsIn0.f8nk8yrxIeCKOlzIy1b-Pg'\n\nexport const POLYGON_COLORS ={\n    COLOR_YES: [0,0,0,0],\n    COLOR_NO :[248,15,54],\n    COLOR_GREEN :[16,196,118]\n  }\n  \nconst AccessMap = ()=> {\n\n  const  centreTypeId = useSelector(state => state.centreTypeId);\n\n  const [data ,setData] = useState([]);\n\nconst query ='SELECT ST_X(ST_Centroid(the_geom)) x, ST_Y(ST_CENTROID(the_geom)) y,district from districtboundary';\nuseEffect( ()=>{\n  const getData = async ()=> {\n    \n    const response  = await axios.get(`https://gsc-admin.carto.com/api/v2/sql?q=${encodeURIComponent(query)}`);\n    setData(response.data.rows.map(elm=>{\n      const d= {text:elm.district,position:[elm.x,elm.y]}\n      //console.log(d);\n      return {text:elm.district,position:[elm.x,elm.y]}\n    })\n    )\n    return response;\n    \n  }\n  getData();\n\n},[query])\n\nconsole.log('laoding..');\n\n\n  \nconst texLayer = new TextLayer({\n  id: 'text-layer',\n  data,\n  pickable: false,\n  sizeMinPixels:2,\n  sizeMaxPixels:15,\n\n  getSize: 20,\n  getAngle: 0,\n  getTextAnchor: 'middle',\n  getAlignmentBaseline: 'center',\n  getBackgroundColor:[255,255,255]\n});\n\n   \n     \n  \n    const layerAccess = new CartoLayer({\n      id:'access-uni',\n      type: MAP_TYPES.QUERY,\n      data: `SELECT cartodb_id,the_geom_webmercator,centre_type,frequency,sym_code,percentage FROM \"gsc-admin\".thirtyminutescatchemntsbyfrequency_rings where centre_typeid =${centreTypeId} order by frequency desc`,\n    \n      getFillColor: object =>{\n        \n        return [...COLOR_ACCESS[object.properties.sym_code],200]\n      },\n      getLineColor: object =>COLOR_ACCESS[object.properties.sym_code],\n      lineWidthMinPixels: 1,\n      pickable: true,\n      \n    });\n    \n    const whereClasue = centreTypeId===1?'centretypeid <=3': 'centretypeid = '+centreTypeId;\n\n    const styleDict = {\n      2: {\n        fc:[255,255,255,200],\n        ec:[189,194,26]\n\n      },\n      3: {\n        fc:[255,255,255,200],\n        ec:[61,176,0]\n\n      },\n      4: {\n        fc:[255,255,255,200],\n        ec:[0,0,0]\n\n      },\n    }\n    \n    const layerCentres = new CartoLayer({\n      id:'centres',\n      type: MAP_TYPES.QUERY,\n      data: `SELECT cartodb_id,the_geom_webmercator,centrename,centretype,centretypeid FROM \"gsc-admin\".centres_metro_strategic_largelocal where ${whereClasue}`,\n    \n      getFillColor: object => styleDict[object.properties.centretypeid].fc,\n       \n      getLineColor: object =>styleDict[object.properties.centretypeid].ec,\n      radiusScale:1,\n      pointRadiusMinPixels: 1,\n      getRadius: object=>1/object.properties.centretypeid *1000,\n      pickable: true,\n      lineWidthMinPixels:1.5\n     \n      \n    });\n\n    const layerDistrict = new CartoLayer({\n      id:'district',\n      type: MAP_TYPES.QUERY,\n      data: `select the_geom_webmercator, district from \"gsc-admin\".districtboundary `,\n    \n      getFillColor: [0,0,0,0],\n      getLineColor: [35, 35, 35],\n      lineWidthMinPixels: 1.2,\n      \n      pickable: false,\n      \n    });\n\n    \n  \n    const getTooltip = ({object}) => {\n      if (!object) return false;\n      const {centre_type,frequency,sym_code,percentage,centrename,centretype} = object.properties;\n\n      let html = '<table>';\n      html += centre_type?`<tr><td>Catchment type:</td><td>${centre_type}</td></tr>`:'';\n      html += sym_code?`<tr ><td>Service frequency:</td><td>${sym_code}</td></tr>`:'';\n      // html += percentage?`<tr><td>Percentage:</td><td>${percentage}%</td></tr>`:'';\n      html += centretype?`<tr><td>Centre type:</td><td>${centretype}</td></tr>`:'';\n      html += centrename?`<tr><td>Name:</td><td>${centrename}</td></tr>`:'';\n      html +='</table>';\n      \n      return {\n        html: html,\n        \n        \n        style:{\n          \n          fontSize: '0.8em',\n          \n         \n        }\n      }\n    };\n\n  \n    return (\n      <div>\n       \n        <DeckGL\n          width=\"100%\"\n          height=\"100%\"\n          initialViewState={INITIAL_VIEW_STATE}\n          getTooltip = {getTooltip}\n          controller={true}\n          layers={[layerAccess,layerDistrict,layerCentres,texLayer]}\n        >\n          <StaticMap\n            reuseMaps\n            mapStyle= {BASEMAP.PRISTON}//\"mapbox://styles/mapbox/dark-v9\"\n            mapboxApiAccessToken= {MAPBOX_ACCESS_TOKEN}\n            preventStyleDiffing\n          />\n        </DeckGL>\n      </div>\n    );\n  }\n\n\n  export default AccessMap;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport default function BasicSelect() {\n  \n\n  const  centreTypeId = useSelector(state => state.centreTypeId);\n  const dispatch = useDispatch();\n  const handleChange = (e, val) => {\n    console.log(e.target.value);\n     \n      return dispatch(\n          {\n              type: 'set_centretype',\n              centreTypeId: e.target.value\n          }\n      )\n  };\n\n \n\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">Centre type</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={centreTypeId}\n          label=\"Centretype\"\n          onChange={handleChange}\n        >\n          <MenuItem value={1}>Metro or Strategic</MenuItem>\n          <MenuItem value={2}>Metro</MenuItem>\n          <MenuItem value={3}>Strategic</MenuItem>\n          <MenuItem value={4}>Large Local Centre (&#8805; 10k sqm of retails)</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}","import React from 'react';\nimport {COLOR_ACCESS } from './Utils';\nimport './Legend.css'\n\n\n\n\n\nconst Legend = () => {\n\n   \n\n    return (\n        <>\n     <div id=\"legend\" style ={{fontFamily:\"Roboto, sans-serif\"}}>\n\n   \n      <h4>30 minutes PT+Walking catchments by service frequency on a weekday (7-9am, Monday, 04/11/19)</h4>\n     \n      <div className=\"legend-content\">\n          {/* <li> <div className='circle' style={{backgroundColor:`rgba(${ POLYGON_COLORS.COLOR_YES.join() })`}}></div>Yes</li> */}\n\n          { Object.keys(COLOR_ACCESS).map((key)=>{\n              return <li> <div className='circle' style={{backgroundColor:`rgba(${ COLOR_ACCESS[key].join() })`}}></div>{key}</li>\n\n          })}\n    \n          \n      </div>\n    </div>\n        </>\n    )\n};\n\nexport default Legend;","\nimport React  from 'react';\nimport { Bar,Chart } from \"react-chartjs-2\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport d from './data.json'\nimport {COLOR_ACCESS} from './Utils'\nimport { useSelector, useDispatch } from 'react-redux';\n\n//git remote add origin https://github.com/gsc-data/university-pt-access.git\n\n\n\nconst BAR_COLORS_BACKGROUND ={};\n\n\nfor (let key in COLOR_ACCESS){\n  BAR_COLORS_BACKGROUND[key] = `rgba(${COLOR_ACCESS[key].join()},1)`\n\n};\n\nconst BAR_COLORS_FILL ={};\n\nfor (let key in COLOR_ACCESS){\n  BAR_COLORS_FILL[key] = `rgba(${COLOR_ACCESS[key].join()},0.9)`\n\n};\n\n//console.log(BAR_COLORS_FILL);\n\n\n\nChart.register(ChartDataLabels)\nconst options = {\n        \n  indexAxis: 'y',\n  maintainAspectRatio: false,\n\n  \n\n  elements: {\n    bar: {\n      borderWidth: 1,\n    }\n  },\n  responsive: true,\n  \n  scales: {\n    x: {\n        ticks: {\n            // Include a dollar sign in the ticks\n            callback: function(value, index, values) {\n                return   value +'%';\n            }\n        }\n    },\n    yAxes: {\n      ticks: {\n          // Include a dollar sign in the ticks\n          // callback: function(value, index, values) {\n          //     return `<b>${this.getLabelForValue(value)}</b>`;\n          // },\n          font: {\n           \n    \n            weight:  function(value){\n              const {tick} = value;\n              //console.log(tick);\n              return tick.label==='Greater Sydney'?\"bold\":\"normal\";\n            }\n     \n          },\n      }\n  }\n}\n\n  ,\n  plugins: {\n    datalabels:{\n      formatter: function(value, context) {\n        return  value>10? Math.round(value,0) + '%':'';\n      },\n      anchor:'end',\n      align :'start',\n      font: {\n        size: '8px',\n        weight:'bold'\n      },\n      color: function(context){\n        const backgroundColor = context.dataset.backgroundColor\n        const [r,g,b] = backgroundColor.slice(5,backgroundColor.length-5).split(',').map(elm=>parseInt(elm))\n        const factor =.5;\n        //console.log(r);\n  \n        const newColor= `rgb(${Math.round(r*factor,0)},${Math.round(g*factor,0)},${Math.round(b*factor,0)})`;\n        //console.log(newColor);\n        return newColor\n      }\n    },\n\n    legend:{\n      display:false\n\n  },\n\n  }\n  \n\n};\n\n\n\n\n\nconst BarChart = () => {\n\n  const  centreTypeId = useSelector(state => state.centreTypeId);\n  const data  = d[centreTypeId.toString()];\n  console.log(data);\n  data.datasets = data.datasets.map( row =>{\n    let k = row['label']\n    //console.log(k);\n      return {...row,label:`${row.label}`,backgroundColor:BAR_COLORS_FILL[k],borderColor:BAR_COLORS_BACKGROUND[k],borderWidth:1}\n  });\n\n    \n    return ( \n        <div style = {{height:'400px'}}>\n        <Bar data = {data} options ={options} />\n        </div>\n\n    )\n\n            \n            \n}\n   \n\nexport default BarChart;\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './RightBar.css';\nimport BasicSelect from './Select';\nimport Legend from './Legend';\nimport BarChart from './barChart';\n// import BarChart from './barChart';\n// import Legend from './Legend';\n\n\nconst zeroPad = (num, places) => String(num).padStart(places, '0')\n\nconst RightBar = () => {\n\n\n\n\n    return (\n        <div className='layer-selector' style={{\n            fontFamily: \"Roboto, sans-serif\", textAlign:\n                'left'\n        }}>\n\n            <BasicSelect />\n            <Legend />\n            <BarChart />\n            <div>\n                <span style ={{fontSize:'8px'}}>Source: GSC Analysis 2021,TfNSW, DPIE, ABS 2016</span>\n            </div>\n            <div>\n            <span style={{fontSize:\"10px\", color:'gray',lineHeight:'1.1em'}}>\n                Please contact <a href = \"mailto: data@gsc.nsw.gov.au\">data@gsc.nsw.gov.au</a> for more info\n                </span> \n            </div>\n           \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </div>\n    );\n};\n\n\n\nexport default RightBar;","import logo from './logo.svg';\nimport './App.css';\nimport AccessMap  from './Map';\nimport RightBar from './rightBar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AccessMap />\n      <RightBar />\n     \n    </div>\n  );\n}\n\nexport default App;\n","let initialState = {\r\n    centreTypeId:1,\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default function reducer(currentState= initialState, action ){\r\n\r\n    switch(action.type){\r\n        case 'set_centretype':\r\n            return {\r\n                ...currentState,\r\n                centreTypeId :action.centreTypeId\r\n            };\r\n\r\n        \r\n        default:\r\n            return currentState\r\n    }\r\n\r\n    \r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import 'mapbox-gl/dist/mapbox-gl.css';\n\n\nimport {createStore,combineReducers} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers/reducer';\n\n\n\n\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}